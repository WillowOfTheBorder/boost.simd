##===================================================================================================
##                              Copyright 2016 NumScale SAS
##
##                   Distributed under the Boost Software License, Version 1.0.
##                        See accompanying file LICENSE.txt or copy at
##                            http://www.boost.org/LICENSE_1_0.txt
##===================================================================================================

set ( SOURCES
   insert.cpp
   store.cpp
   horner.cpp
   horn.cpp
   horn1.cpp
#memory
   extract.cpp
   load.cpp
   slide.cpp
   splat.cpp
   make.cpp
#alias
   modulus.cpp
#arithmetic
   abs.cpp
   abs_s.cpp
   arg.cpp
   average.cpp
   ceil.cpp
   conj.cpp
   correct_fma.cpp
   dec.cpp
   dec_s.cpp
   dist.cpp
   dist_s.cpp
   div.cpp
   divceil.cpp
   divfloor.cpp
   divround.cpp
   divround2even.cpp
   divtrunc.cpp
   divides_s.cpp
   floor.cpp
   fma.cpp
   fms.cpp
   fnma.cpp
   fnms.cpp
   hypot.cpp
   iceil.cpp
   idiv.cpp
   idivceil.cpp
   idivfix.cpp
   idivfloor.cpp
   idivround.cpp
   idivround2even.cpp
   ifloor.cpp
   inc.cpp
   inc_s.cpp
   iround2even.cpp
   iround.cpp
   logical_xor.cpp
   max.cpp
   meanof.cpp
   min.cpp
   minmod.cpp
   minusone.cpp
   minusone_s.cpp
   mod.cpp
   multiplies_s.cpp
   neg_s.cpp
   oneminus.cpp
   oneminus_s.cpp
   oneplus.cpp
   oneplus_s.cpp
   plus_s.cpp
   rec.cpp
   remainder.cpp
   rem.cpp
   remquo.cpp
   remround.cpp
   round2even.cpp
   round.cpp
   rsqrt.cpp
   sqr_abs.cpp
   sqr.cpp
   sqr_s.cpp
   sqrt.cpp
   tenpower.cpp
   tofloat.cpp
   toint.cpp
   toint_s.cpp
   touint.cpp
   touint_s.cpp
   trunc.cpp
   two_add.cpp
   two_prod.cpp
   two_split.cpp
#bitwise
   bitget.cpp
   bitset.cpp
   bits.cpp
   bitwise_andnot.cpp
   bitwise_cast.cpp
   bitwise_notand.cpp
   bitwise_notor.cpp
   bitwise_ornot.cpp
   bitwise_select.cpp
   clz.cpp
   ctz.cpp
   ffs.cpp
   firstbitset.cpp
   firstbitunset.cpp
   genmaskc.cpp
   genmask.cpp
   hi.cpp
   ilog2.cpp
   lo.cpp
   popcnt.cpp
   reversebits.cpp
   rol.cpp
   ror.cpp
   rrol.cpp
   rror.cpp
   rshl.cpp
   rshr.cpp
   shr.cpp
##   swapbytes.cpp
   twopower.cpp
#boolean
   if_allbits_else.cpp
   if_else_allbits.cpp
   if_else_zero.cpp
   ifnotadd.cpp
   ifnotdec.cpp
   ifnotinc.cpp
   ifnotsub.cpp
   if_one_else_zero.cpp
   if_zero_else.cpp
   if_zero_else_one.cpp
   logical_andnot.cpp
   logical_notand.cpp
   logical_notor.cpp
   logical_ornot.cpp
   mask2logical.cpp
   negif.cpp
   negifnot.cpp
   seladd.cpp
   seldec.cpp
   selinc.cpp
   selsub.cpp
#ieee
   bitfloating.cpp
   bitinteger.cpp
   bitofsign.cpp
   copysign.cpp
#   eps.cpp
   exponentbits.cpp
   exponent.cpp
   frac.cpp
   frexp.cpp
   ilogb.cpp
   ldexp.cpp
   mantissa.cpp
   maxmag.cpp
   maxnum.cpp
   maxnummag.cpp
   minmag.cpp
   minnum.cpp
   minnummag.cpp
   modf.cpp
   negate.cpp
   negatenz.cpp
   nextafter.cpp
   next.cpp
   nextpow2.cpp
   predecessor.cpp
   prev.cpp
   safe_max.cpp
   safe_min.cpp
   saturate.cpp
   sbits.cpp
   sign.cpp
   signnz.cpp
   successor.cpp
   ulpdist.cpp
   ulp.cpp
#operator
   bitwise_and.cpp
   bitwise_or.cpp
   bitwise_xor.cpp
   comma.cpp
   complement.cpp
   divides.cpp
   if_else.cpp
   is_equal.cpp
   is_greater_equal.cpp
   is_greater.cpp
   is_less_equal.cpp
   is_less.cpp
   is_not_equal.cpp
   logical_and.cpp
   logical_not.cpp
   logical_or.cpp
   minus.cpp
   modulo.cpp
   multiplies.cpp
   plus.cpp
   shift_left.cpp
   shift_right.cpp
   unary_minus.cpp
   unary_minus_s.cpp
   unary_plus.cpp
#predicates
   is_denormal.cpp
   is_equal_with_equal_nans.cpp
   is_eqz.cpp
   is_even.cpp
   is_finite.cpp
   is_flint.cpp
   is_gez.cpp
   is_gtz.cpp
   is_imag.cpp
   is_inf.cpp
   is_invalid.cpp
   is_lez.cpp
   is_ltz.cpp
   is_nan.cpp
   is_negative.cpp
   is_nez.cpp
   is_ngez.cpp
   is_ngtz.cpp
   is_nlez.cpp
   is_nltz.cpp
   is_not_denormal.cpp
   is_not_equal_with_equal_nans.cpp
   is_not_greater_equal.cpp
   is_not_greater.cpp
   is_not_imag.cpp
   is_not_infinite.cpp
   is_not_less_equal.cpp
   is_not_less.cpp
   is_not_nan.cpp
   is_not_real.cpp
   is_odd.cpp
   is_ord.cpp
   is_positive.cpp
   is_real.cpp
   is_unord.cpp
   majority.cpp
#reduction
   all.cpp
   any.cpp
   compare_equal.cpp
   compare_greater_equal.cpp
   compare_greater.cpp
   compare_less_equal.cpp
   compare_less.cpp
   compare_not_equal.cpp
   dot.cpp
   hmsb.cpp
   is_included_c.cpp
   is_included.cpp
   is_simd_logical.cpp
#   maximum.cpp
#   minimum.cpp
   nbtrue.cpp
   none.cpp
   posmax.cpp
   posmin.cpp
   prod.cpp
   sum.cpp
#swar
   broadcast.cpp
   cummax.cpp
   cummin.cpp
   cumprod.cpp
   cumsum.cpp
   enumerate.cpp
   lookup.cpp
   reverse.cpp
   sort.cpp
##   splatted_maximum.cpp
##   splatted_minimum.cpp
##   splatted_prod.cpp
##   splatted_sum.cpp
#exponential
   cbrt.cpp
   exp.cpp
   exp10.cpp
   exp2.cpp
   expm1.cpp
   exprecneg.cpp
   exprecnegc.cpp
   expx2.cpp
   log.cpp
   log10.cpp
   log1p.cpp
   log2.cpp
   logspace_add.cpp
   logspace_sub.cpp
#   nthroot.cpp # long compilation time to fix
   pow.cpp
   pow2.cpp
   pow_abs.cpp
   significants.cpp
   sqrt1pm1.cpp
#hyperbolic
   acosh.cpp
   acoth.cpp
   acsch.cpp
   asech.cpp
   asinh.cpp
   atanh.cpp
   cosh.cpp
   coth.cpp
   csch.cpp
   sech.cpp
   sinhc.cpp
   sinhcosh.cpp
   sinh.cpp
   tanh.cpp
#trigonometric
   acosd.cpp
   acos.cpp
   acospi.cpp
   acotd.cpp
   acot.cpp
   acscd.cpp
   acsc.cpp
   asecd.cpp
   asec.cpp
   asind.cpp
   asin.cpp
   asinpi.cpp
   atan2d.cpp
   atan2.cpp
   atand.cpp
   atan.cpp
   atanpi.cpp
   cosd.cpp
   cos.cpp
   cospi.cpp
   cotd.cpp
   cot.cpp
   cotpi.cpp
   cscd.cpp
   csc.cpp
   cscpi.cpp
   indeg.cpp
   inrad.cpp
   rem_2pi.cpp
   rem_pio2_cephes.cpp
   rem_pio2.cpp
   rem_pio2_medium.cpp
   rem_pio2_straight.cpp
   secd.cpp
   sec.cpp
   secpi.cpp
   sinc.cpp
   sincosd.cpp
   sincos.cpp
   sincospi.cpp
   sincpi.cpp
   sind.cpp
   sin.cpp
   sinpi.cpp
   tand.cpp
   tan.cpp
   tanpi.cpp
#aliases
   compare_eq.cpp
   compare_ge.cpp
   compare_gt.cpp
   compare_le.cpp
   compare_lt.cpp
   compare_neq.cpp
   bitwise_not.cpp
   rdivide.cpp
   if_zero_else_allbits.cpp
   if_allbits_else_zero.cpp
   if_nan_else.cpp
   if_else_nan.cpp
   where.cpp
   select.cpp
   sel.cpp
   eq.cpp
   is_eq.cpp
   ge.cpp
   is_ge.cpp
   gt.cpp
   is_gt.cpp
   testz.cpp
   are_disjoint.cpp
   le.cpp
   is_le.cpp
   lt.cpp
   is_lt.cpp
   ne.cpp
   neq.cpp
   is_neq.cpp
   is_nge.cpp
   is_ngt.cpp
   is_nle.cpp
   is_nlt.cpp
   fmax.cpp
   fmin.cpp
   drem.cpp
   fmod.cpp
   rint.cpp
   if_add.cpp
   if_dec.cpp
   if_inc.cpp
   if_sub.cpp
   shl.cpp
   shli.cpp
   shra.cpp
   shar.cpp
   shrai.cpp
   shri.cpp
   ifix.cpp
   fix.cpp
   neg.cpp
   remfix.cpp
   itrunc.cpp
   angle.cpp
   is_not_finite.cpp
   is_not_invalid.cpp
#eulerian
   stirling.cpp
   gamma.cpp
   signgam.cpp
   erf.cpp
   erfc.cpp
   erfcx.cpp
   gammaln.cpp
#libc
   is_lessgreater.cpp
   is_normal.cpp
   fabs.cpp
   fpclassify.cpp
   signbit.cpp
)

make_unit( "function.scalar"   ${SOURCES})
make_coverage("function.scalar"  ${SOURCES})
